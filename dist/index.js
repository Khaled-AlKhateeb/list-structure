"use strict";(self.webpackChunklist_structure=self.webpackChunklist_structure||[]).push([[826],{426:(n,r,e)=>{e.d(r,{Z:()=>i});var t=e(537),a=e.n(t),o=e(645),s=e.n(o)()(a());s.push([n.id,"* {\r\n  box-sizing: border-box;\r\n  font-family: Ubuntu, sans-serif;\r\n}\r\n\r\n.main-container {\r\n  width: 50%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  box-shadow: 2px 10px 10px gray;\r\n}\r\n\r\n.header,\r\n.to-do-form {\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid gray;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.refresh-btn,\r\n.add-btn,\r\n.rmv-btn {\r\n  border: none;\r\n  background-color: white;\r\n  color: gray;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 2rem;\r\n}\r\n\r\n.refresh-btn:hover,\r\n.add-btn:hover,\r\n.rmv-btn:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.title {\r\n  margin: 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n}\r\n\r\n.task-input {\r\n  border: none;\r\n  outline: none;\r\n  height: 100%;\r\n  padding: 0.5rem;\r\n  font-size: 1.1rem;\r\n  font-style: italic;\r\n  background-color: transparent;\r\n}\r\n\r\n.todo-list {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.task-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 50px;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.task-checkbox {\r\n  display: flex;\r\n  flex: 2;\r\n  align-items: center;\r\n}\r\n\r\n.label {\r\n  padding-left: 1rem;\r\n  outline: none;\r\n  border: none;\r\n  background-color: transparent;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.label:hover {\r\n  cursor: text;\r\n}\r\n\r\n.label:focus-visible {\r\n  outline: none;\r\n}\r\n\r\n.btn-container {\r\n  height: 50px;\r\n}\r\n\r\n.clear-btn {\r\n  font-size: 1.2rem;\r\n  color: gray;\r\n  border: none;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,+BAA+B;AACjC;;AAEA;EACE,UAAU;EACV,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,8BAA8B;AAChC;;AAEA;;EAEE,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,6BAA6B;EAC7B,eAAe;AACjB;;AAEA;;;EAGE,YAAY;EACZ,uBAAuB;EACvB,WAAW;EACX,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;AACb;;AAEA;;;EAGE,eAAe;AACjB;;AAEA;EACE,SAAS;EACT,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,eAAe;EACf,iBAAiB;EACjB,kBAAkB;EAClB,6BAA6B;AAC/B;;AAEA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,YAAY;EACZ,kCAAkC;EAClC,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,OAAO;EACP,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,6BAA6B;EAC7B,iBAAiB;AACnB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,WAAW;EACX,YAAY;EACZ,WAAW;EACX,YAAY;AACd",sourcesContent:["* {\r\n  box-sizing: border-box;\r\n  font-family: Ubuntu, sans-serif;\r\n}\r\n\r\n.main-container {\r\n  width: 50%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  box-shadow: 2px 10px 10px gray;\r\n}\r\n\r\n.header,\r\n.to-do-form {\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid gray;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.refresh-btn,\r\n.add-btn,\r\n.rmv-btn {\r\n  border: none;\r\n  background-color: white;\r\n  color: gray;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 2rem;\r\n}\r\n\r\n.refresh-btn:hover,\r\n.add-btn:hover,\r\n.rmv-btn:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.title {\r\n  margin: 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n}\r\n\r\n.task-input {\r\n  border: none;\r\n  outline: none;\r\n  height: 100%;\r\n  padding: 0.5rem;\r\n  font-size: 1.1rem;\r\n  font-style: italic;\r\n  background-color: transparent;\r\n}\r\n\r\n.todo-list {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.task-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  height: 50px;\r\n  border-bottom: 1px solid lightgray;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.task-checkbox {\r\n  display: flex;\r\n  flex: 2;\r\n  align-items: center;\r\n}\r\n\r\n.label {\r\n  padding-left: 1rem;\r\n  outline: none;\r\n  border: none;\r\n  background-color: transparent;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.label:hover {\r\n  cursor: text;\r\n}\r\n\r\n.label:focus-visible {\r\n  outline: none;\r\n}\r\n\r\n.btn-container {\r\n  height: 50px;\r\n}\r\n\r\n.clear-btn {\r\n  font-size: 1.2rem;\r\n  color: gray;\r\n  border: none;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n"],sourceRoot:""}]);const i=s},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(t)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(s[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);t&&s[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),r.push(l))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */"),s=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(s).concat([o]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var o={},s=[],i=0;i<n.length;i++){var c=n[i],A=t.base?c[0]+t.base:c[0],l=o[A]||0,d="".concat(A," ").concat(l);o[A]=l+1;var u=e(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)r[u].references++,r[u].updater(p);else{var m=a(p,t);t.byIndex=i,r.splice(i,0,{identifier:d,updater:m,references:1})}s.push(d)}return s}function a(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var s=0;s<o.length;s++){var i=e(o[s]);r[i].references--}for(var c=t(n,a),A=0;A<o.length;A++){var l=e(o[A]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}o=c}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,a&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},611:(n,r,e)=>{var t=e(379),a=e.n(t),o=e(795),s=e.n(o),i=e(569),c=e.n(i),A=e(565),l=e.n(A),d=e(216),u=e.n(d),p=e(589),m=e.n(p),f=e(426),h={};h.styleTagTransform=m(),h.setAttributes=l(),h.insert=c().bind(null,"head"),h.domAPI=s(),h.insertStyleElement=u(),a()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals;const E=new class{constructor(){this.taskArr=[],this.add=n=>{this.taskArr.push(n)},this.remove=n=>{this.taskArr.splice(n,1)}}},g=(n,r)=>{const e=[];let t=null;for(let a=n&&n.parentElement;a;a=a.parentElement)a.className.includes(r)&&(t=a),e.push(a);return t},b=n=>{const r=document.getElementById("todoList"),e=document.createElement("li"),t=document.createElement("div"),a=document.createElement("input"),o=document.createElement("input"),s=document.createElement("button"),i=document.createElement("i");e.classList.add("task-item"),o.classList.add("label"),t.classList.add("task-checkbox"),s.classList.add("rmv-btn"),i.classList.add("fa-solid","fa-ellipsis-vertical"),o.value=n.description,a.setAttribute("type","checkbox"),o.setAttribute("id","edit"),s.setAttribute("type","button"),o.setAttribute("type","text"),o.setAttribute("disabled","true"),s.appendChild(i),t.appendChild(a),t.appendChild(o),e.appendChild(t),e.appendChild(s),r.appendChild(e);for(let e=0;e<r.children.length;e+=1)r.children[e].order=e+1,n.index=e+1,E.taskArr[e].completed&&(r.children[e].firstChild.firstChild.checked=!0);window.localStorage.setItem("tasks",JSON.stringify(E.taskArr))},C=()=>{const n=window.localStorage.getItem("tasks");n&&(E.taskArr=JSON.parse(n),document.getElementById("todoList").innerHTML="",E.taskArr.forEach((n=>{b(n)})))},v=document.getElementById("addBtn"),y=document.getElementById("todoList"),k=document.getElementById("clearBtn");y.addEventListener("change",(n=>{(n=>{const r=g(n.target,"task-item");if(r.firstChild.firstChild.checked)for(let n=0;n<E.taskArr.length;n+=1)E.taskArr[n].index===r.order&&(E.taskArr[n].completed=!0);else for(let n=0;n<E.taskArr.length;n+=1)E.taskArr[n].index===r.order&&(E.taskArr[n].completed=!1);window.localStorage.setItem("tasks",JSON.stringify(E.taskArr))})(n)})),v.addEventListener("click",(()=>{(()=>{const n={description:"",completed:!1,index:null},r=document.getElementById("addTask");n.description=r.value,E.add(n),r.value="",b(n)})()})),y.addEventListener("click",(n=>{(n=>{const r=g(n.target,"task-item");n.target&&(n.target.className.includes("task-item")||r)&&("label"===n.target.className&&(n.target.disabled=!1),r.getElementsByTagName("i")[0].className="fa-solid fa-trash")})(n),(n=>{const r=g(n.target,"task-item"),e=document.getElementById("todoList");n.target&&(n.target.className.includes("task-item")||r)&&(r.children[1].addEventListener("click",(()=>{r.remove(),E.remove(r.order-1);for(let n=0;n<e.children.length+1;n+=1)e.children[n].order=n+1,E.taskArr[n].index=n+1})),window.localStorage.setItem("tasks",JSON.stringify(E.taskArr)))})(n)})),y.addEventListener("focusout",(n=>{(n=>{const r=g(n.target,"task-item");for(let n=0;n<E.taskArr.length;n+=1)if(r.order===E.taskArr[n].index){const e=r.children[0].children[1];E.taskArr[n].description=e.value}"label"===n.target.className&&(n.target.disabled=!0),r.getElementsByTagName("i")[0].className="fa-solid fa-ellipsis-vertical",window.localStorage.setItem("tasks",JSON.stringify(E.taskArr))})(n)})),k.addEventListener("click",(()=>{(()=>{const n=E.taskArr.filter((n=>!n.completed));E.taskArr=n,window.localStorage.setItem("tasks",JSON.stringify(n)),C()})()})),window.addEventListener("load",(()=>{C()}))}},n=>{n(n.s=611)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,